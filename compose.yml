services:
 # https://hub.docker.com/_/redis
  redis:
    image: redis
    volumes:
      - ${TENANT_DATA}/redis_data:/app
    env_file: .env
    ports:
      - '6379:6379'
  # https://hub.docker.com/_/nginx
  nginx:
    image: nginx
    restart: always
    volumes:
      - ./nginx/default.conf:/tmp/default.conf
    ports:
      - "8080:80"
  # https://hub.docker.com/_/postgres
  #  postgres:
  #    image: postgres:latest
  #    volumes:
  #      - ${TENANT_DATA}/db_data:/var/lib/postgresql/data
  #    env_file: .env
  #    environment:
  #      - POSTGRES_USER=${POSTGRES_USER}
  #      - POSTGRES_PASSWORD=${POSTGRES_PW}
  #      - POSTGRES_DB=${POSTGRES_DB} #optional (specify default database instead of $POSTGRES_DB)
  #    ports:
  #      - "5432:5432"
  #    restart: always
  # https://hub.docker.com/r/postgis/postgis - installs the postgres with it
  postgis:
    image: postgis/postgis:${POSTGRES_MAJOR_VERSION}-${POSTGIS_MAJOR_VERSION}.${POSTGIS_MINOR_RELEASE}
    volumes:
      - ${TENANT_DATA}/db_data:/var/lib/postgresql/data
      - ${TENANT_BKUP}/dbbakups:/backups
    env_file: .env
    environment:
      # If you need to create multiple database you can add coma separated databases eg gis,data
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PW}
      - ALLOW_IP_RANGE=0.0.0.0/0
      # Add extensions you need to be enabled by default in the DB. Default are the five specified below
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting,address_standardize,address_standardizer_data_us
      - RUN_AS_ROOT=false
    ports:
      - "25432:5432"
    restart: on-failure
    healthcheck:
        test: "PGPASSWORD=postgres pg_isready -h 127.0.0.1 -U postgres -d postgres"
  #
  #  dbbackups:
  #    image: kartoza/pg-backup:${POSTGRES_MAJOR_VERSION}-${POSTGIS_MAJOR_VERSION}.${POSTGIS_MINOR_RELEASE}
  #    hostname: pg-backups
  #    volumes:
  #      - ${TENANT_BKUP}/dbbackups:/backups
  #    env_file: .env
  #    environment:
  #      - DUMPPREFIX=PG_db
  #      - POSTGRES_USER=${POSTGRES_USER}
  #      - POSTGRES_PASS=${POSTGRES_PW}
  #      - POSTGRES_PORT=5432
  #      - POSTGRES_HOST=${POSTGRES_BKUP_HOST}
  #    restart: on-failure
  #    depends_on:
  #      postgis:
  #        condition: service_healthy
  # https://hub.docker.com/r/dpage/pgadmin4
  pgadmin:
    image: dpage/pgadmin4:latest
    env_file: .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - "5050:80"
    restart: always
#
volumes:
  db_data:
    external: true
  redis_data:
    external: true
  dbbackups:
    external: true
#